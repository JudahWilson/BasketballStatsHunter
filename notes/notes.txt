>>>DB
    *mariadb -uroot -pMB123!@#qweQWE
    DB name - basketball_stats
    
sportradar.com
	username - judah.d.wilson@gmail.com
	password - SR123!@#qweQWE
	
	
# Major Modules (may reference minor modules)
STAT CATEGORY
	* Team
	* Player
	* Game
	* Season
	Play
	Action

FILTER
	* Team
	* Player
	* Game (or date?)
	* Season
	* All-time
	* Date range
	Play
	Action
	
possible filters on each STAT CATEGORY:
	STAT CATEGORY |FILTERS...
	=================================================================================================================================================================================================================
	* Player	  |Game                       |Team                       |Season                     |All-time                   |Date range                 |?Play (least prioritized?) |?Action (less prioritized) |
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	* Game		  |Player                     |Team                       |                           |                           |                           |?Play (least prioritized?) |?Action (less prioritized) |
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	* Team		  |                           |                           |                           |                           |                           |                           |                           |
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	* Season	  |                           |                           |                           |                           |                           |                           |                           |
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Play		  |                           |                           |                           |                           |                           |                           |                           |
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	  Action	  |                           |                           |                           |                           |                           |                           |                           |
	=================================================================================================================================================================================================================
	
	-consider combining Actions and Plays as a single filter in UI?
	
STAT TABLE (a collection of STAT ROWS having the same Schema)
	rows - list of STAT ROWS. must have the same schema
	schema: SCHEMA - the table's designated STAT FIELDS and STAT TOPIC 

STAT RESULTS (The data of a specific STAT CATEGORY curated by a STAT FILTER)
	(Can additionally be described as a collection of STAT ROWS which will each have the same schema as defined in the STAT RESULTS object and will describe STAT SUBJECTS of the same STAT CATEGORY)
	-statRows: [STAT ROW]
	
STAT ROW (a collection of STAT POINTS for a single STAT TARGET)
	(also can be known as a collection of STAT POINTS on a )
	-Schema: SCHEMA - The schema of the row defined by the STAT CATEGORY plus the STAT FIELDS
	-subject: STAT SUBJECT - the instance of a the specified STAT CATEGORY that is described by the STAT ROW
	
STAT SUBJECT (an instance of the STAT TOPIC)

STAT POINT (a single STAT FIELD's instance in the STAT ROW)

STAT TARGET & FILTER -> STAT ROW < [STAT POINTS]

STAT FIELD (they make up every possible field of a STAT CATEGORY)
	(can be known as elements that make up the DDL of STAT CATEGORY)
	name
		-data type: StatFieldType
	examples
		points
		rebounds
		fouls
		FG %
		...
		...
		...
		
STAT POINT
	a use of a stat field on 
	
STAT FIELD + STAT FIELD + ... = STAT ROW

STAT FIELD & STAT ROW = STAT POINT

STAT POINT can navigate to comparison to another STAT POINT of same STAT FIELD
	
STAT POINT SELECTOR component
	takes STAT POINT as input to guide how it renders UI component to search/select another stat point. 
	input causes it to select only a related STAT POINT
	
## UI components
ui components should superset the data components to
	apply the data shown in the ui component 
	drive the rendering of the component
	drive the functionalities attached to the ui component

ui components will have more quite than the usual component functionality
	example
		built-in logic to provide a jump to another UI component (same or differing type) that of data related in at least one aspect to the originating data
			perhaps from a right click interaction of any of either the STAT TABLE, STAT ROW, or even a STAT POINT. 
				data related in at least one way to the clicked object will be accessible 
		additionally, there will be built-in logic to jump to a comparison ui component between two DATA RESULTS involving the same data object and UI Component(?)
	
### UI Component types
high functioning table
line graph
varying bar charts 
more?


# Problems
defining classes in frontend and backend and always having identical structure for theat least the (complex) data that travels between the frontend and backend
    possible solutions (best combination of)
        cleverly or thoroughly designed CI/CD testing
        server side and client side code dedicate to test serializing & deserialize both directions
        use protocal buffers (protobuf)
        serialize / deserialize
        forget it, just do typescript in frontend, backend, and have a top level "shared" folder for shared modules
            front end and backend may both have import { MyObject } from '../../shared/src/models/MyObject';
            STRUCTURE
                my-project/
                ├── backend/
                │   ├── src/
                │   │   ├── controllers/
                │   │   │   └── ...
                │   │   ├── models/
                │   │   │   └── ...
                │   │   └── app.ts
                │   ├── package.json
                │   └── tsconfig.json
                ├── frontend/
                │   ├── src/
                │   │   ├── components/
                │   │   │   └── ...
                │   │   ├── models/
                │   │   │   └── ...
                │   │   └── main.ts
                │   ├── package.json
                │   └── tsconfig.json
                └── shared/
                    ├── src/
                    │   └── models/
                    │       └── ...
                    ├── package.json
                    └── tsconfig.json

# Minor Modules

SCHEMA
	stat_fields: [STAT FIELDS]
	stat_topic: [STAT TOPIC]

generateTable(statRows: [STAT ROW])
	- generate a table using statRows with each STAT ROW having the same schema 

(type) FilterCategory = player | game | team | season | all-time | date
(type) StatFieldType = percentage | average | sum | 
(interface) Filter
	apply()

filterGenerator(type: FilterCategory) 